% ------------------------------------------------------------------------------
#single_pair_equals
:q
[value="chommoda"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "chommoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('chommoda')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "chommoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('chommoda')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#single_pair_not_equals
:q
[value<>"chommoda"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value NEQ "chommoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)<>LOWER('chommoda')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value NEQ "chommoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)<>LOWER('chommoda')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#single_pair_contains
:q
[value*="homm"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value CONTAINS "homm"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value) LIKE ('%' || LOWER('homm') || '%')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value CONTAINS "homm"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value) LIKE ('%' || LOWER('homm') || '%')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#single_pair_starts_with
:q
[value^="ch"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value STARTSWITH "ch"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value) LIKE (LOWER('ch')|| '%')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value STARTSWITH "ch"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value) LIKE (LOWER('ch')|| '%')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#single_pair_ends_with
:q
[value$="ter"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value ENDSWITH "ter"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value) LIKE ('%' || LOWER('ter'))
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value ENDSWITH "ter"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value) LIKE ('%' || LOWER('ter'))
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#single_pair_wildcards
:q
[value?="c*ommod?"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value WILDCARDS "c*ommod?"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value) LIKE LOWER('c%ommod_')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value WILDCARDS "c*ommod?"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value) LIKE LOWER('c%ommod_')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#single_pair_regex
:q
[value~="av(us|ia)"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value REGEXP "av(us|ia)"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  span.value ~ 'av(us|ia)'
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value REGEXP "av(us|ia)"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  span.value ~ 'av(us|ia)'
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#single_pair_fuzzy
:q
[value%="chommoda:0.5"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value SIMILAR "chommoda:0.5"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  similarity(span.value,'chommoda') >= 0.5
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value SIMILAR "chommoda:0.5"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  similarity(span.value,'chommoda') >= 0.5
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#single_pair_non_privileged

:q
[pn="arrius"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: pn EQ "arrius"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  EXISTS
  (
    SELECT * FROM span_attribute sa
    WHERE sa.span_id=span.id
    AND LOWER(sa.name)=LOWER('pn')
    AND LOWER(value)=LOWER('arrius')
  )
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: pn EQ "arrius"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  EXISTS
  (
    SELECT * FROM span_attribute sa
    WHERE sa.span_id=span.id
    AND LOWER(sa.name)=LOWER('pn')
    AND LOWER(value)=LOWER('arrius')
  )
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#single_pair_non_privileged_nr
:q
[syl_n>"4"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: syl_n GT "4"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  EXISTS
  (
    SELECT * FROM span_attribute sa
    WHERE sa.span_id=span.id
    AND LOWER(sa.name)=LOWER('syl\_n')
    AND (SELECT (CASE pyt_is_numeric(value::varchar) WHEN true THEN value::double precision ELSE NULL END)) > 4
  )
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: syl_n GT "4"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  EXISTS
  (
    SELECT * FROM span_attribute sa
    WHERE sa.span_id=span.id
    AND LOWER(sa.name)=LOWER('syl\_n')
    AND (SELECT (CASE pyt_is_numeric(value::varchar) WHEN true THEN value::double precision ELSE NULL END)) > 4
  )
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#single_pair_doc_single_pair
:q
@[author="Catullus"]; [value="chommoda"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "chommoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  INNER JOIN document ON span.document_id=document.id
  WHERE
  -- doc begin
  (
  -- s1: author EQ "Catullus"
  LOWER(document.author)=LOWER('Catullus')
  )
  -- doc end
  AND
  span.type='tok' AND
  LOWER(span.value)=LOWER('chommoda')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "chommoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  INNER JOIN document ON span.document_id=document.id
  WHERE
  -- doc begin
  (
  -- s1: author EQ "Catullus"
  LOWER(document.author)=LOWER('Catullus')
  )
  -- doc end
  AND
  span.type='tok' AND
  LOWER(span.value)=LOWER('chommoda')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#single_pair_doc_single_pair_non_privileged
:q
@[category="poetry"]; [value="chommoda"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "chommoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  INNER JOIN document ON span.document_id=document.id
  INNER JOIN document_attribute ON span.document_id=document_attribute.document_id
  WHERE
  -- doc begin
  (
  -- s1: category EQ "poetry"
  LOWER(document_attribute.name)=LOWER('category') AND LOWER(document_attribute.value)=LOWER('poetry')
  )
  -- doc end
  AND
  span.type='tok' AND
  LOWER(span.value)=LOWER('chommoda')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "chommoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  INNER JOIN document ON span.document_id=document.id
  INNER JOIN document_attribute ON span.document_id=document_attribute.document_id
  WHERE
  -- doc begin
  (
  -- s1: category EQ "poetry"
  LOWER(document_attribute.name)=LOWER('category') AND LOWER(document_attribute.value)=LOWER('poetry')
  )
  -- doc end
  AND
  span.type='tok' AND
  LOWER(span.value)=LOWER('chommoda')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#single_pair_cor_doc_single_pair
:q
@@neoteroi;@[author="Catullus"];[value="chommoda"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "chommoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  INNER JOIN document ON span.document_id=document.id
  -- crp begin
  INNER JOIN document_corpus
  ON span.document_id=document_corpus.document_id
  AND document_corpus.corpus_id IN('neoteroi')
  -- crp end
  WHERE
  -- doc begin
  (
  -- s1: author EQ "Catullus"
  LOWER(document.author)=LOWER('Catullus')
  )
  -- doc end
  AND
  span.type='tok' AND
  LOWER(span.value)=LOWER('chommoda')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "chommoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  INNER JOIN document ON span.document_id=document.id
  -- crp begin
  INNER JOIN document_corpus
  ON span.document_id=document_corpus.document_id
  AND document_corpus.corpus_id IN('neoteroi')
  -- crp end
  WHERE
  -- doc begin
  (
  -- s1: author EQ "Catullus"
  LOWER(document.author)=LOWER('Catullus')
  )
  -- doc end
  AND
  span.type='tok' AND
  LOWER(span.value)=LOWER('chommoda')
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#single_pair_struct
:q
[$name="lg"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: $name EQ "lg"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='lg'
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: $name EQ "lg"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='lg'
) -- s1
-- result
, r AS
(
SELECT s1.* FROM s1
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#two_pairs_or
:q
[value="chommoda"] OR [value="commoda"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "chommoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('chommoda')
) -- s1
, s2 AS
(
  -- s2: value EQ "commoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('commoda')
) -- s2
-- result
, r AS
(
SELECT s1.* FROM s1
UNION
SELECT s2.* FROM s2
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "chommoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('chommoda')
) -- s1
, s2 AS
(
  -- s2: value EQ "commoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('commoda')
) -- s2
-- result
, r AS
(
SELECT s1.* FROM s1
UNION
SELECT s2.* FROM s2
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#two_pairs_and
:q
[value="chommoda"] AND [length>"5"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "chommoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('chommoda')
) -- s1
, s2 AS
(
  -- s2: length GT "5"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  (SELECT (CASE pyt_is_numeric(span.length::varchar) WHEN true THEN span.length::double precision ELSE NULL END)) >
5
) -- s2
-- result
, r AS
(
SELECT s1.* FROM s1
INTERSECT
SELECT s2.* FROM s2
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "chommoda"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('chommoda')
) -- s1
, s2 AS
(
  -- s2: length GT "5"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  (SELECT (CASE pyt_is_numeric(span.length::varchar) WHEN true THEN span.length::double precision ELSE NULL END)) >
5
) -- s2
-- result
, r AS
(
SELECT s1.* FROM s1
INTERSECT
SELECT s2.* FROM s2
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#two_pairs_and_noval
:q
[value="ionios"] AND [gn]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "ionios"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('ionios')
) -- s1
, s2 AS
(
  -- s2: gn
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  EXISTS
  (
    SELECT * FROM span_attribute sa
    WHERE sa.span_id=span.id
    AND LOWER(sa.name)=LOWER('gn')
  )
) -- s2
-- result
, r AS
(
SELECT s1.* FROM s1
INTERSECT
SELECT s2.* FROM s2
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "ionios"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('ionios')
) -- s1
, s2 AS
(
  -- s2: gn
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  EXISTS
  (
    SELECT * FROM span_attribute sa
    WHERE sa.span_id=span.id
    AND LOWER(sa.name)=LOWER('gn')
  )
) -- s2
-- result
, r AS
(
SELECT s1.* FROM s1
INTERSECT
SELECT s2.* FROM s2
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#two_pairs_and_not_noval
:q
[value="ionios"] AND NOT [gn]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "ionios"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('ionios')
) -- s1
, s2 AS
(
  -- s2: gn
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  EXISTS
  (
    SELECT * FROM span_attribute sa
    WHERE sa.span_id=span.id
    AND LOWER(sa.name)=LOWER('gn')
  )
) -- s2
-- result
, r AS
(
SELECT s1.* FROM s1
EXCEPT
SELECT s2.* FROM s2
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "ionios"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('ionios')
) -- s1
, s2 AS
(
  -- s2: gn
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  EXISTS
  (
    SELECT * FROM span_attribute sa
    WHERE sa.span_id=span.id
    AND LOWER(sa.name)=LOWER('gn')
  )
) -- s2
-- result
, r AS
(
SELECT s1.* FROM s1
EXCEPT
SELECT s2.* FROM s2
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#near
:q
[value="sic"] NEAR(m=0,s=l) [value="mater"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s1
, s2 AS
(
  -- s2: value EQ "mater"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('mater')
) -- s2
-- result
, r AS
(
-- pyt_is_near_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_near_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 0)
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s1
, s2 AS
(
  -- s2: value EQ "mater"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('mater')
) -- s2
-- result
, r AS
(
-- pyt_is_near_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_near_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 0)
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#not_near
:q
[value="sic"] NOT NEAR(m=0) [value="mater"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s1
, s2 AS
(
  -- s2: value EQ "mater"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('mater')
) -- s2
-- result
, r AS
(
-- NOT pyt_is_near_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
SELECT s1.* FROM s1
WHERE NOT EXISTS (
SELECT 1 FROM s2
WHERE s2.document_id=s1.document_id AND
pyt_is_near_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 0)
)
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s1
, s2 AS
(
  -- s2: value EQ "mater"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('mater')
) -- s2
-- result
, r AS
(
-- NOT pyt_is_near_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
SELECT s1.* FROM s1
WHERE NOT EXISTS (
SELECT 1 FROM s2
WHERE s2.document_id=s1.document_id AND
pyt_is_near_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 0)
)
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#before
:q
[value="sic"] BEFORE(m=0,s=l) [value="mater"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s1
, s2 AS
(
  -- s2: value EQ "mater"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('mater')
) -- s2
-- result
, r AS
(
-- pyt_is_before_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_before_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 0)
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s1
, s2 AS
(
  -- s2: value EQ "mater"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('mater')
) -- s2
-- result
, r AS
(
-- pyt_is_before_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_before_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 0)
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#not_before
:q
[value="sic"] NOT BEFORE(m=0) [value="mater"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s1
, s2 AS
(
  -- s2: value EQ "mater"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('mater')
) -- s2
-- result
, r AS
(
-- NOT pyt_is_before_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
SELECT s1.* FROM s1
WHERE NOT EXISTS (
SELECT 1 FROM s2
WHERE s2.document_id=s1.document_id AND
pyt_is_before_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 0)
)
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s1
, s2 AS
(
  -- s2: value EQ "mater"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('mater')
) -- s2
-- result
, r AS
(
-- NOT pyt_is_before_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
SELECT s1.* FROM s1
WHERE NOT EXISTS (
SELECT 1 FROM s2
WHERE s2.document_id=s1.document_id AND
pyt_is_before_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 0)
)
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#after
:q
[value="sic"] AFTER(m=0,s=l) [value="mater"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s1
, s2 AS
(
  -- s2: value EQ "mater"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('mater')
) -- s2
-- result
, r AS
(
-- pyt_is_after_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_after_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 0)
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s1
, s2 AS
(
  -- s2: value EQ "mater"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('mater')
) -- s2
-- result
, r AS
(
-- pyt_is_after_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_after_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 0)
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#not_after
:q
[value="sic"] NOT AFTER(m=0) [value="mater"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s1
, s2 AS
(
  -- s2: value EQ "mater"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('mater')
) -- s2
-- result
, r AS
(
-- NOT pyt_is_after_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
SELECT s1.* FROM s1
WHERE NOT EXISTS (
SELECT 1 FROM s2
WHERE s2.document_id=s1.document_id AND
pyt_is_after_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 0)
)
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s1
, s2 AS
(
  -- s2: value EQ "mater"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('mater')
) -- s2
-- result
, r AS
(
-- NOT pyt_is_after_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
SELECT s1.* FROM s1
WHERE NOT EXISTS (
SELECT 1 FROM s2
WHERE s2.document_id=s1.document_id AND
pyt_is_after_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 0)
)
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#inside
:q
[value$="ter"] INSIDE() [$l]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value ENDSWITH "ter"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value) LIKE ('%' || LOWER('ter'))
) -- s1
, s2 AS
(
  -- s2: $l
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='l'
) -- s2
-- result
, r AS
(
-- pyt_is_inside_within(a.p1, a.p2, b.p1, b.p2, ns=0, ms=MAX, ne=0, me=MAX)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_inside_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 2147483647, 0, 2147483647)
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value ENDSWITH "ter"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value) LIKE ('%' || LOWER('ter'))
) -- s1
, s2 AS
(
  -- s2: $l
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='l'
) -- s2
-- result
, r AS
(
-- pyt_is_inside_within(a.p1, a.p2, b.p1, b.p2, ns=0, ms=MAX, ne=0, me=MAX)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_inside_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 2147483647, 0, 2147483647)
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#not_inside
:q
[len="2"] NOT INSIDE() [$lg]

:r
-- CTE list
WITH s1 AS
(
  -- s1: len EQ "2"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  EXISTS
  (
    SELECT * FROM span_attribute sa
    WHERE sa.span_id=span.id
    AND LOWER(sa.name)=LOWER('len')
    AND LOWER(value)=LOWER('2')
  )
) -- s1
, s2 AS
(
  -- s2: $lg
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='lg'
) -- s2
-- result
, r AS
(
-- NOT pyt_is_inside_within(a.p1, a.p2, b.p1, b.p2, ns=0, ms=MAX, ne=0, me=MAX)
SELECT s1.* FROM s1
WHERE NOT EXISTS (
SELECT 1 FROM s2
WHERE s2.document_id=s1.document_id AND
pyt_is_inside_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 2147483647, 0, 2147483647)
)
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: len EQ "2"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  EXISTS
  (
    SELECT * FROM span_attribute sa
    WHERE sa.span_id=span.id
    AND LOWER(sa.name)=LOWER('len')
    AND LOWER(value)=LOWER('2')
  )
) -- s1
, s2 AS
(
  -- s2: $lg
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='lg'
) -- s2
-- result
, r AS
(
-- NOT pyt_is_inside_within(a.p1, a.p2, b.p1, b.p2, ns=0, ms=MAX, ne=0, me=MAX)
SELECT s1.* FROM s1
WHERE NOT EXISTS (
SELECT 1 FROM s2
WHERE s2.document_id=s1.document_id AND
pyt_is_inside_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 2147483647, 0, 2147483647)
)
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#overlaps
:q
[gn] OVERLAPS(n=1) [$l]

:r
-- CTE list
WITH s1 AS
(
  -- s1: gn
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  EXISTS
  (
    SELECT * FROM span_attribute sa
    WHERE sa.span_id=span.id
    AND LOWER(sa.name)=LOWER('gn')
  )
) -- s1
, s2 AS
(
  -- s2: $l
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='l'
) -- s2
-- result
, r AS
(
-- pyt_is_overlap_within(a.p1, a.p2, b.p1, b.p2, n=1, m=MAX)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_overlap_within(s1.p1, s1.p2, s2.p1, s2.p2, 1, 2147483647)
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: gn
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  EXISTS
  (
    SELECT * FROM span_attribute sa
    WHERE sa.span_id=span.id
    AND LOWER(sa.name)=LOWER('gn')
  )
) -- s1
, s2 AS
(
  -- s2: $l
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='l'
) -- s2
-- result
, r AS
(
-- pyt_is_overlap_within(a.p1, a.p2, b.p1, b.p2, n=1, m=MAX)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_overlap_within(s1.p1, s1.p2, s2.p1, s2.p2, 1, 2147483647)
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#not_overlaps
:q
[gn] NOT OVERLAPS(n=1) [$l]

:r
-- CTE list
WITH s1 AS
(
  -- s1: gn
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  EXISTS
  (
    SELECT * FROM span_attribute sa
    WHERE sa.span_id=span.id
    AND LOWER(sa.name)=LOWER('gn')
  )
) -- s1
, s2 AS
(
  -- s2: $l
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='l'
) -- s2
-- result
, r AS
(
-- NOT pyt_is_overlap_within(a.p1, a.p2, b.p1, b.p2, n=1, m=MAX)
SELECT s1.* FROM s1
WHERE NOT EXISTS (
SELECT 1 FROM s2
WHERE s2.document_id=s1.document_id AND
pyt_is_overlap_within(s1.p1, s1.p2, s2.p1, s2.p2, 1, 2147483647)
)
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: gn
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  EXISTS
  (
    SELECT * FROM span_attribute sa
    WHERE sa.span_id=span.id
    AND LOWER(sa.name)=LOWER('gn')
  )
) -- s1
, s2 AS
(
  -- s2: $l
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='l'
) -- s2
-- result
, r AS
(
-- NOT pyt_is_overlap_within(a.p1, a.p2, b.p1, b.p2, n=1, m=MAX)
SELECT s1.* FROM s1
WHERE NOT EXISTS (
SELECT 1 FROM s2
WHERE s2.document_id=s1.document_id AND
pyt_is_overlap_within(s1.p1, s1.p2, s2.p1, s2.p2, 1, 2147483647)
)
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#lalign
:q
[$name="l"] LALIGN(m=0) [$name="snt"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: $name EQ "l"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='l'
) -- s1
, s2 AS
(
  -- s2: $name EQ "snt"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='snt'
) -- s2
-- result
, r AS
(
-- pyt_is_left_aligned(a.p1, a.p2, b.p1, n=0, m=0)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_left_aligned(s1.p1, s2.p1, 0, 0)
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: $name EQ "l"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='l'
) -- s1
, s2 AS
(
  -- s2: $name EQ "snt"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='snt'
) -- s2
-- result
, r AS
(
-- pyt_is_left_aligned(a.p1, a.p2, b.p1, n=0, m=0)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_left_aligned(s1.p1, s2.p1, 0, 0)
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#ralign
:q
[$name="l"] RALIGN(m=0) [$name="snt"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: $name EQ "l"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='l'
) -- s1
, s2 AS
(
  -- s2: $name EQ "snt"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='snt'
) -- s2
-- result
, r AS
(
-- pyt_is_right_aligned(a.p1, a.p2, b.p1, n=0, m=0)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_right_aligned(s1.p1, s2.p1, 0, 0)
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: $name EQ "l"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='l'
) -- s1
, s2 AS
(
  -- s2: $name EQ "snt"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='snt'
) -- s2
-- result
, r AS
(
-- pyt_is_right_aligned(a.p1, a.p2, b.p1, n=0, m=0)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_right_aligned(s1.p1, s2.p1, 0, 0)
) -- r

-- merger
SELECT COUNT(*) FROM r

% ------------------------------------------------------------------------------
#before_before
:q
[value="sic"] BEFORE(m=0,s=l) [value="mater"] BEFORE(m=0,s=l) [value="sic"]

:r
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s1
, s2 AS
(
  -- s2: value EQ "mater"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('mater')
) -- s2
, s3 AS
(
  -- s3: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s3
-- result
, r AS
(
-- pyt_is_before_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_before_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 0)
-- pyt_is_before_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
INNER JOIN s3 ON s2.document_id=s3.document_id AND
pyt_is_before_within(s2.p1, s2.p2, s3.p1, s3.p2, 0, 0)
) -- r

-- merger
SELECT DISTINCT r.id, r.document_id, r.p1, r.p2, r.type,
r.index, r.length, r.value,
document.author, document.title, document.sort_key
FROM r
INNER JOIN document ON r.document_id=document.id
ORDER BY sort_key, p1
LIMIT 20 OFFSET 0

:c
-- CTE list
WITH s1 AS
(
  -- s1: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s1
, s2 AS
(
  -- s2: value EQ "mater"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('mater')
) -- s2
, s3 AS
(
  -- s3: value EQ "sic"
  SELECT DISTINCT
    span.id, span.document_id, span.type,
    span.p1, span.p2, span.index, span.length,
    span.value
  FROM span
  WHERE
  span.type='tok' AND
  LOWER(span.value)=LOWER('sic')
) -- s3
-- result
, r AS
(
-- pyt_is_before_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
SELECT s1.* FROM s1
INNER JOIN s2 ON s1.document_id=s2.document_id AND
pyt_is_before_within(s1.p1, s1.p2, s2.p1, s2.p2, 0, 0)
-- pyt_is_before_within(a.p1, a.p2, b.p1, b.p2, n=0, m=0)
INNER JOIN s3 ON s2.document_id=s3.document_id AND
pyt_is_before_within(s2.p1, s2.p2, s3.p1, s3.p2, 0, 0)
) -- r

-- merger
SELECT COUNT(*) FROM r
